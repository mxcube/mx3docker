#!/usr/bin/env bash

CONTAINER=mxcube2_dev_qt4
# HARDWARE_REPOSITORY_SERVER="/MXCuBE/mxcube/ExampleFiles/HardwareObjects.xml:/MXCuBE/mxcube/repo_test_1"
# CUSTOM_HARDWARE_OBJECTS_PATH="/MXCuBE/mxcube/extra_HO_test_1:/MXCuBE/mxcube/extra_HO_test_2"
# CUSTOM_BRICKS_PATH="/MXCuBE/mxcube/extra_brick_test_1:/MXCuBE/mxcube/extra_brick_test_2"
HARDWARE_REPOSITORY_SERVER=""
CUSTOM_HARDWARE_OBJECTS_PATH=""
CUSTOM_BRICKS_PATH=""
xhost +local:
# Command to run WITHOUT GPhL workflow installation.
# NB the -u option must match Dockerfile
# exec docker run -it -h=$CONTAINER -u rhfogh:gphl -e CUSTOM_HARDWARE_OBJECTS_PATH=$CUSTOM_HARDWARE_OBJECTS_PATH -e CUSTOM_BRICKS_PATH=$CUSTOM_BRICKS_PATH -v $MXCUBE2_ROOT:/MXCuBE/mxcube -e DISPLAY=$DISPLAY -e QT_X11_NO_MITSHM=1 -v /tmp/.X11-unix:/tmp/.X11-unix -e HARDWARE_REPOSITORY_SERVER=$HARDWARE_REPOSITORY_SERVER $CONTAINER
# Command needed to run GPhL workflows - See gphl_config files for meaning of different directories
exec docker run -it --mac-address 54:ee:75:b6:8e:d3 -h=$CONTAINER -u rhfogh:gphl -e CUSTOM_HARDWARE_OBJECTS_PATH=$CUSTOM_HARDWARE_OBJECTS_PATH -e CUSTOM_BRICKS_PATH=$CUSTOM_BRICKS_PATH -v $MXCUBE2_ROOT:/MXCuBE/mxcube -v /public/xtal:/MXCuBE/softwares -v /home/rhfogh/Software/jre1.8.0_144/:/MXCuBE/gphl_java -v /home/rhfogh/scratch/sources/eclipse/wf12/:/MXCuBE/gphl_java_classes -v /home/rhfogh/scratch/mxcube_testdata/:/tmp/mxcube_testdata -e DISPLAY=$DISPLAY -e QT_X11_NO_MITSHM=1 -e HARDWARE_REPOSITORY_SERVER=$HARDWARE_REPOSITORY_SERVER -v /tmp/.X11-unix:/tmp/.X11-unix $CONTAINER
